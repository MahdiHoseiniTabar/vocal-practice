import{_ as j,r as y,o as Z,J as ee,e as te,x as l,y as r,K as z,z as h,L as P,M as C,N as oe,A as L,B as A}from"./0EIdrjSQ.js";const se={class:"keyboard-container"},ne={key:0,class:"controls"},ae={class:"keyboard-wrapper"},ce={class:"keyboard"},le=["onClick"],re={class:"note-label"},ie={class:"note-octave"},ue={__name:"Keyboard",emits:["notePlayed"],setup(f,{emit:i}){const p=i,u=[{solfege:"Do",name:"c",midiOffset:0},{solfege:"Re",name:"d",midiOffset:2},{solfege:"Mi",name:"e",midiOffset:4},{solfege:"Fa",name:"f",midiOffset:5},{solfege:"Sol",name:"g",midiOffset:7},{solfege:"La",name:"a",midiOffset:9},{solfege:"Si",name:"b",midiOffset:11}],g=[2,3,4,5],o=y([]),c=y(null);y({});const D=y({}),_=y(!1),e=y(!1),t={};g.forEach(s=>{u.forEach(n=>{const a=n.name+s;t[a]=`piano/${a}.ogg`})});const d={2:"octave-color-2",3:"octave-color-3",4:"octave-color-4",5:"octave-color-5"},I=y(null),J=s=>d[s]||"";Z(()=>{g.forEach(s=>{u.forEach(n=>{o.value.push({id:n.name+s,baseName:n.name,octave:s,label:n.solfege,midiOffset:n.midiOffset})})}),c.value=new(window.AudioContext||window.webkitAudioContext),F(),ee(()=>{I.value&&I.value.scrollIntoView({behavior:"smooth",inline:"start",block:"nearest"})})});const F=async()=>{if(!c.value||e.value||_.value)return;_.value=!0,e.value=!1;const s=Object.entries(t).map(async([n,a])=>{try{const v=await fetch(`/audio/${a}`);if(!v.ok)throw new Error(`HTTP error! status: ${v.status} for ${a}`);const q=await v.arrayBuffer(),Q=await c.value.decodeAudioData(q);D.value[n]=Q}catch(v){throw console.error(`Error loading piano sample for ${n} (${a}):`,v),new Error("Failed to load piano samples.")}});try{await Promise.all(s),e.value=!0,console.log("All piano samples loaded successfully!")}catch(n){console.error("One or more piano samples failed to load:",n.message),e.value=!1,D.value={}}finally{_.value=!1}},U=s=>{if(!c.value)return;const n=D.value[s.id];if(!n){console.warn(`Piano buffer not loaded for note: ${s.id}.`),_.value||F();return}const a=c.value.createBufferSource();a.buffer=n,a.connect(c.value.destination),a.start(0)},W=s=>{if(!e.value||_.value){console.log("Piano samples not ready yet.");return}console.log(`Playing note: ${s.label}${s.octave} with sound type: Piano`),U(s),p("notePlayed",s)};return te(()=>{c.value&&c.value.close()}),(s,n)=>(r(),l("div",se,[!e.value&&!_.value?(r(),l("div",ne,n[0]||(n[0]=[h("span",{class:"error-message"}," Piano samples failed to load or are unavailable. ",-1)]))):z("",!0),h("div",ae,[h("div",ce,[(r(!0),l(P,null,C(o.value,a=>(r(),l("div",{key:a.id,class:oe(["key white-key",{"key-disabled":!e.value||_.value,[J(a.octave)]:!0}]),onClick:v=>W(a),ref_for:!0,ref:v=>{a.id==="c3"&&(I.value=v)}},[h("span",re,L(a.label),1),h("span",ie,L(a.octave),1)],10,le))),128))])])]))}},fe=j(ue,[["__scopeId","data-v-cea1c8bb"]]),de={class:"musical-staff-container"},_e=["y1","x2","y2"],Ie=["transform"],ve={key:0,class:"note-on-staff"},ye=["x1","y1","x2","y2"],he=["cy"],pe=["x1","y1","x2","y2"],ge=["x1","y1","x2","y2"],B=400,De=350,G=18,H=1,m=50,M=8,Me=6,K=35,R=1.2,X=30,k=36,me=38,E=40,ke=41,x=43,Ee=45,w=47,xe=48,O=50,we=52,N=53,Oe=55,S=57,Ne=59,$=60,Se=62,T=64,$e=65,Te=67,be=69,V=71,Pe=72,Ce=74,Fe=76,Y=77,Le=79,b=81,Ae=83,Be=100,Ge="",He={__name:"MusicalStaff",props:{currentNote:{type:Object,default:null}},setup(f){const i=m+150,p=G/2,u=e=>Be+(e-1)*G,g=e=>{const t=[k,me,E,ke,x,Ee,w,xe,O,we,N,Oe,S,Ne,$,Se,T,$e,Te,be,V,Pe,Ce,Fe,Y,Le,b,Ae],d=t.indexOf(T),I=t.indexOf(e);return I===-1?(console.warn(`MIDI note ${e} not found in natural notes mapping.`),0):I-d},o=e=>{const t=g(e);return u(5)-t*p},c=e=>(e.octave+1)*12+e.midiOffset,D=e=>e<=V?"up":"down",_=e=>{const t=[];return e<T&&(e<=$&&t.push(o($)),e<=S&&t.push(o(S)),e<=N&&t.push(o(N)),e<=O&&t.push(o(O)),e<=w&&t.push(o(w)),e<=x&&t.push(o(x)),e<=E&&t.push(o(E)),e<=k&&t.push(o(k))),e>Y&&e>=b&&t.push(o(b)),t};return(e,t)=>(r(),l("div",de,[(r(),l("svg",{width:B,height:De,class:"musical-staff-svg"},[(r(),l(P,null,C(5,d=>h("line",{key:"line-"+d,x1:m,y1:u(d),x2:B-m,y2:u(d),stroke:"black","stroke-width":H},null,8,_e)),64)),h("path",{d:Ge,fill:"black",transform:`translate(${m-5}, ${u(2)-40}) scale(0.12)`,class:"g-clef"},null,8,Ie),f.currentNote?(r(),l("g",ve,[(r(!0),l(P,null,C(_(c(f.currentNote)),(d,I)=>(r(),l("line",{key:"ledger-"+I,x1:i-X/2,y1:d,x2:i+X/2,y2:d,stroke:"black","stroke-width":H},null,8,ye))),128)),h("ellipse",{cx:i,cy:o(c(f.currentNote)),rx:M,ry:Me,fill:"black"},null,8,he),D(c(f.currentNote))==="up"?(r(),l("line",{key:0,x1:i+M,y1:o(c(f.currentNote)),x2:i+M,y2:o(c(f.currentNote))-K,stroke:"black","stroke-width":R},null,8,pe)):(r(),l("line",{key:1,x1:i-M,y1:o(c(f.currentNote)),x2:i-M,y2:o(c(f.currentNote))+K,stroke:"black","stroke-width":R},null,8,ge))])):z("",!0)]))]))}},Ke=j(He,[["__scopeId","data-v-2543405b"]]),Xe={__name:"index",setup(f){const i=y(null),p=u=>{i.value=u,console.log("Note played from keyboard:",u)};return(u,g)=>(r(),l("div",null,[A(Ke,{currentNote:i.value},null,8,["currentNote"]),A(fe,{onNotePlayed:p})]))}};export{Xe as default};
