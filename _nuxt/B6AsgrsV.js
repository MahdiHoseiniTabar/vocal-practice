import{_ as z,n as ee,r as v,o as te,J as oe,e as se,x as c,y as l,K as U,z as y,L as P,M as F,N as ne,A,B}from"./B9JxLsSW.js";const ae={class:"keyboard-container"},ce={key:0,class:"controls"},le={class:"keyboard-wrapper"},re={class:"keyboard"},ie=["onClick"],ue={class:"note-label"},fe={class:"note-octave"},de={__name:"Keyboard",emits:["notePlayed"],setup(u,{emit:r}){const p=ee().app.baseURL,f=r,g=[{solfege:"Do",name:"c",midiOffset:0},{solfege:"Re",name:"d",midiOffset:2},{solfege:"Mi",name:"e",midiOffset:4},{solfege:"Fa",name:"f",midiOffset:5},{solfege:"Sol",name:"g",midiOffset:7},{solfege:"La",name:"a",midiOffset:9},{solfege:"Si",name:"b",midiOffset:11}],o=[2,3,4,5],d=v([]),_=v(null);v({});const D=v({}),e=v(!1),t=v(!1),i={};o.forEach(s=>{g.forEach(n=>{const a=n.name+s;i[a]=`${p}audio/piano/${a}.ogg`})});const h={2:"octave-color-2",3:"octave-color-3",4:"octave-color-4",5:"octave-color-5"},k=v(null),J=s=>h[s]||"";te(()=>{o.forEach(s=>{g.forEach(n=>{d.value.push({id:n.name+s,baseName:n.name,octave:s,label:n.solfege,midiOffset:n.midiOffset})})}),_.value=new(window.AudioContext||window.webkitAudioContext),L(),oe(()=>{k.value&&k.value.scrollIntoView({behavior:"smooth",inline:"start",block:"nearest"})})});const L=async()=>{if(!_.value||t.value||e.value)return;e.value=!0,t.value=!1;const s=Object.entries(i).map(async([n,a])=>{try{const I=await fetch(a);if(!I.ok)throw new Error(`HTTP error! status: ${I.status} for ${a}`);const Q=await I.arrayBuffer(),Z=await _.value.decodeAudioData(Q);D.value[n]=Z}catch(I){throw console.error(`Error loading piano sample for ${n} (${a}):`,I),new Error("Failed to load piano samples.")}});try{await Promise.all(s),t.value=!0,console.log("All piano samples loaded successfully!")}catch(n){console.error("One or more piano samples failed to load:",n.message),t.value=!1,D.value={}}finally{e.value=!1}},W=s=>{if(!_.value)return;const n=D.value[s.id];if(!n){console.warn(`Piano buffer not loaded for note: ${s.id}.`),e.value||L();return}const a=_.value.createBufferSource();a.buffer=n,a.connect(_.value.destination),a.start(0)},q=s=>{if(!t.value||e.value){console.log("Piano samples not ready yet.");return}console.log(`Playing note: ${s.label}${s.octave} with sound type: Piano`),W(s),f("notePlayed",s)};return se(()=>{_.value&&_.value.close()}),(s,n)=>(l(),c("div",ae,[!t.value&&!e.value?(l(),c("div",ce,n[0]||(n[0]=[y("span",{class:"error-message"}," Piano samples failed to load or are unavailable. ",-1)]))):U("",!0),y("div",le,[y("div",re,[(l(!0),c(P,null,F(d.value,a=>(l(),c("div",{key:a.id,class:ne(["key white-key",{"key-disabled":!t.value||e.value,[J(a.octave)]:!0}]),onClick:I=>q(a),ref_for:!0,ref:I=>{a.id==="c3"&&(k.value=I)}},[y("span",ue,A(a.label),1),y("span",fe,A(a.octave),1)],10,ie))),128))])])]))}},_e=z(de,[["__scopeId","data-v-31655460"]]),Ie={class:"musical-staff-container"},ve=["y1","x2","y2"],ye=["transform"],he={key:0,class:"note-on-staff"},pe=["x1","y1","x2","y2"],ge=["cy"],De=["x1","y1","x2","y2"],Me=["x1","y1","x2","y2"],G=400,me=350,H=18,R=1,m=50,M=8,ke=6,K=35,X=1.2,V=30,E=36,Ee=38,x=40,xe=41,w=43,we=45,O=47,Oe=48,N=50,Ne=52,S=53,Se=55,$=57,$e=59,T=60,Te=62,b=64,be=65,Ce=67,Pe=69,Y=71,Fe=72,Le=74,Ae=76,j=77,Be=79,C=81,Ge=83,He=100,Re="",Ke={__name:"MusicalStaff",props:{currentNote:{type:Object,default:null}},setup(u){const r=m+150,p=H/2,f=e=>He+(e-1)*H,g=e=>{const t=[E,Ee,x,xe,w,we,O,Oe,N,Ne,S,Se,$,$e,T,Te,b,be,Ce,Pe,Y,Fe,Le,Ae,j,Be,C,Ge],i=t.indexOf(b),h=t.indexOf(e);return h===-1?(console.warn(`MIDI note ${e} not found in natural notes mapping.`),0):h-i},o=e=>{const t=g(e);return f(5)-t*p},d=e=>(e.octave+1)*12+e.midiOffset,_=e=>e<=Y?"up":"down",D=e=>{const t=[];return e<b&&(e<=T&&t.push(o(T)),e<=$&&t.push(o($)),e<=S&&t.push(o(S)),e<=N&&t.push(o(N)),e<=O&&t.push(o(O)),e<=w&&t.push(o(w)),e<=x&&t.push(o(x)),e<=E&&t.push(o(E))),e>j&&e>=C&&t.push(o(C)),t};return(e,t)=>(l(),c("div",Ie,[(l(),c("svg",{width:G,height:me,class:"musical-staff-svg"},[(l(),c(P,null,F(5,i=>y("line",{key:"line-"+i,x1:m,y1:f(i),x2:G-m,y2:f(i),stroke:"black","stroke-width":R},null,8,ve)),64)),y("path",{d:Re,fill:"black",transform:`translate(${m-5}, ${f(2)-40}) scale(0.12)`,class:"g-clef"},null,8,ye),u.currentNote?(l(),c("g",he,[(l(!0),c(P,null,F(D(d(u.currentNote)),(i,h)=>(l(),c("line",{key:"ledger-"+h,x1:r-V/2,y1:i,x2:r+V/2,y2:i,stroke:"black","stroke-width":R},null,8,pe))),128)),y("ellipse",{cx:r,cy:o(d(u.currentNote)),rx:M,ry:ke,fill:"black"},null,8,ge),_(d(u.currentNote))==="up"?(l(),c("line",{key:0,x1:r+M,y1:o(d(u.currentNote)),x2:r+M,y2:o(d(u.currentNote))-K,stroke:"black","stroke-width":X},null,8,De)):(l(),c("line",{key:1,x1:r-M,y1:o(d(u.currentNote)),x2:r-M,y2:o(d(u.currentNote))+K,stroke:"black","stroke-width":X},null,8,Me))])):U("",!0)]))]))}},Xe=z(Ke,[["__scopeId","data-v-2543405b"]]),Ye={__name:"index",setup(u){const r=v(null),p=f=>{r.value=f,console.log("Note played from keyboard:",f)};return(f,g)=>(l(),c("div",null,[B(Xe,{currentNote:r.value},null,8,["currentNote"]),B(_e,{onNotePlayed:p})]))}};export{Ye as default};
